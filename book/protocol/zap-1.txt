=======================================================
Zerograph Application Protocol (ZAP), version 1 (draft)
(C) Copyright 2014, Nigel Small <nigel@nigelsmall.com>
=======================================================


Introduction
============
The Zerograph Application Protocol (ZAP) is an OSI level 7 text-based
request-response protocol that is used to define communications between
client applications that require a graph database and server applications
that provide a Neo4j data store.

ZAP version 1 is designed to operate atop the Zerograph Presentation Protocol
(ZPP) version 1. It defines the a number of resources for graph database
interaction and the methods and data they accept. In addition, the response
documents and error messages for those requests are defined.


Services
========
A Zerograph application server offers one of more services, each of which
provides access to a collection of resources. The selection of resources
available through each service are dependent on that service's definition but
are static and should remain available for the lifetime of that service.

This document defines two core services: a Control service (used for oversight
and system management) and a Graph service (used to expose a Neo4j database).
With these, two distinct server combinations are permitted: the single service
model and the multiple service model:

Single Service Model
--------------------
A server adhering to the single service model MUST offer a single Graph service
only. It has no corresponding Control service and MUST present this as a null
value when queried in that regard.

Multiple Service Model
----------------------
A server adhering to the multiple service model offers a single Control service
plus zero or more Graph services. These Graph services may be started and
stopped dynamically through the Control service.

Control Service Resources
-------------------------
A Control service should offer the following resources:

- Control - a read-only overview of this Control service
- GraphMap - control resource for all Graph services managed here

Graph Service Resources
-----------------------
A Graph service should offer the following resources:

- Control - a read-only overview of the associated Control service (if any)
- Graph - a read-only overview of this Graph service
- Cypher - Cypher execution and profiling resource
- Node - access to individual nodes, identified by ID
- Relationship - access to individual relationships, identified by ID
- All - access to read or purge all graph entities in bulk
- NodeSet - access to sets of nodes, identified by label, key and value
- RelationshipSet - access to relationships, identified by attachment and type


Resources
=========

All Resource
------------
GET/DELETE

Control Resource
----------------
GET

Cypher Resource
---------------
EXECUTE/PROFILE

Graph Resource
--------------
GET

GraphMap Resource
-----------------
GET/START/STOP/CREATE/DELETE

Node Resource
-------------
GET/SET/PATCH/CREATE/DELETE

NodeSet Resource
----------------
MATCH/MERGE/PURGE

Relationship Resource
---------------------
GET/SET/PATCH/CREATE/DELETE

RelationshipSet Resource
------------------------
MATCH/MERGE/PURGE
